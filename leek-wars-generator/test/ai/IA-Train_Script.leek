// Fichier contenant le tableau de renforcement. 
global lossLife = getLife(); 
global lastIndexMP = 0; 

// Getters 
var enemy = getNearestEnemy();
var entity = getEntity(); 
var enemyCell = getCell(enemy);
var entityCell = getCell(entity); 
var enemyLife = getLife(enemy); 
 

// Utiliser debug(""); pour connaitre les actions utilisé. 
//var index = 0 // getPathLength(entityCell, enemyCell) * 16; 
// Selectionner l'action en fonction du max... 
var indexAction = 3;
var info = "";

var nbactions = 23

var vector = vectorisation();


var check = 0;
for(var v:var puissance in tabAssiocatif) { 
	if(v == vector){
		check = 1;
	}
}

if(check ==  0){
	var rando = randInt(0, nbactions-1);
	indexAction = rando;
	info = "creation d'un nouveau vecteur";
}else{
	info = "incrémentation du vecteur"
	var index = tabAssiocatif[vector];
	var sum = [];
	for(var i = 0; i < nbactions; i++){
		for(var j = 0; j<tabRL[index*nbactions+i]; j++){
			push(sum, i);
		}
	}
	var rando = randInt(0, count(sum)-1);
	indexAction = sum[rando];
	info = "incrémentation d'une action "


}
	// Tour Point 
	if(indexAction == 0){ // Tirer un coup avec le pistol
		if(getWeapon() == null or getWeapon() != WEAPON_PISTOL)
			setWeapon(WEAPON_PISTOL);
		useWeapon(enemy);
	}
	else if(indexAction == 1){ // Tirer un coup avec le Machine Gun
		if(getWeapon() == null or getWeapon() != WEAPON_MACHINE_GUN)
			setWeapon(WEAPON_MACHINE_GUN);
		useWeapon(enemy);
	}
	else if(indexAction== 2){ // Tirer autant que posible avec le pistol
		if(getWeapon() == null or getWeapon() != WEAPON_PISTOL)
			setWeapon(WEAPON_PISTOL);
		while(useWeapon(enemy) == USE_SUCCESS){}
	}
	else if(indexAction == 3){ // Tirer autant que possible avec le Machine Gun
		if(getWeapon() == null or getWeapon() != WEAPON_MACHINE_GUN)
			setWeapon(WEAPON_MACHINE_GUN);
		while(useWeapon(enemy) == USE_SUCCESS){}
	}
	else if(indexAction == 4){ // Utiliser la puce CHIP_BANDAGE
		useChip(CHIP_BANDAGE, entity); 
	}
	else if(indexAction == 5){ // Utiliser la puce CHIP_SHOCK
		useChip(CHIP_SHOCK, enemy);
	}
	else if(indexAction == 6){ // Utiliser la puce CHIP_PEBBLE
		useChip(CHIP_PEBBLE, enemy);
	}
	else if(indexAction == 7){ // Utiliser la puce CHIP_ICE
		useChip(CHIP_ICE, enemy);
	}
	if(indexAction == 8){ // Avancer de 1 vers l'enemi
		moveToward(enemy, 1);
	}
	else if(indexAction == 9){ // Avancer de 2 vers l'enemi
		moveToward(enemy, 2);
	}
	else if(indexAction == 10){ // Avancer de 3 vers l'enemi
		moveToward(enemy, 3);
	}
	else if(indexAction == 11){ // Avancer autant que possible vers l'enemi
		moveToward(enemy);
	}
	else if(indexAction == 12){ // Séloigner de 1 de l'enemi
		moveAwayFrom(enemy, 1); 
	}
	else if(indexAction == 13){ // Séloigner de 2 de l'enemi
		moveAwayFrom(enemy, 2); 
	}
	else if(indexAction == 14){ // Séloigner de 3 de l'enemi
		moveAwayFrom(enemy, 3); 
	}
	else if(indexAction == 15){ // Séloigner autant que possible de l'enemi
		moveAwayFrom(enemy); 
	}
	
	//--------------------------------------------------------------
	// A VOIR //

	// Utilise la chip pebble si possible
	// A voir si je continue pour toutes les chips de dégats
	else if(indexTP == 16){  
		tryAndUseChip(CHIP_PEBBLE,enemy);
	}
	//Avance de 1
	// Utilise la chip pebble si possible
	else if(indexTP == 17){
		moveToward(enemy,1);
		tryAndUseChip(CHIP_PEBBLE,enemy);
	}
	//Avance de 2 
	//Utilise la chip pebble si possible 
	else if(indexTP == 18){
		moveToward(enemy,2);
		tryAndUseChip(CHIP_PEBBLE,enemy);
	}
	// Avance de 3 
	// Utilise la chippe pebbele si possible 
	else if(indexTP == 19){
		moveToward(enemy,3);
		tryAndUseChip(CHIP_PEBBLE,enemy);
	}
	//Avance de 1 
	// Equipe PISTOLET et utilise une arme sur l'enemi
	else if(indexTP == 20){
		moveToward(enemy,1);
		setAndUseWeapon_(WEAPON_PISTOL,enemy,true);
	}
	//Avance de 2 
	// Equipe PISTOLET et utilise une arme sur l'enemi
	else if(indexTP == 21){
		moveToward(enemy,2);
		setAndUseWeapon_(WEAPON_PISTOL,enemy,true);
	} 
	// Avance de 3
	// Equipe PISTOLET et utilise une arme sur l'enemi
	else if(indexTP == 22){
		moveToward(enemy,3);
		setAndUseWeapon_(WEAPON_PISTOL,enemy,true);
	}
	//Avance de 1 
	// Equipe MACHINE GUN et utilise une arme sur l'enemi
	else if(indexTP == 20){
		moveToward(enemy,1);
		setAndUseWeapon_(WEAPON_MACHINE_GUN,enemy,true);
	}
	//Avance de 2 
	// Equipe MACHINE GUN et utilise une arme sur l'enemi
	else if(indexTP == 21){
		moveToward(enemy,2);
		setAndUseWeapon_(WEAPON_MACHINE_GUN,enemy,true);
	} 
	// Avance de 3
	// Equipe MACHINE GUN et utilise une arme sur l'enemi
	else if(indexTP == 22){
		moveToward(enemy,3);
		setAndUseWeapon_(WEAPON_MACHINE_GUN,enemy,true);
	}
	//----------------------------------------------------------------
	//----------------------------------------------------------------
	// Mettre les stats de mon perso pour que ces actions soient possible //
	//Tirer un coup au magnum
	else if(indexTP == 23){
		if(getWeapon() == null or getWeapon() != WEAPON_MAGNUM)
			setWeapon(WEAPON_MAGNUM);
		useWeapon(enemy);
	}
	//Tirer un coup au rhino 
	else if(indexTP == 24){
		if(getWeapon() == null or getWeapon() != WEAPON_RHINO)
			setWeapon(WEAPON_RHINO);
		useWeapon(enemy);
	}
	// Taper un coup au katana
	else if(indexTP == 25){
		if(getWeapon() == null or getWeapon() != WEAPON_KATANA)
			setWeapon(WEAPON_KATANA);
		useWeapon(enemy);
	}
	// Tirer un coup de lightninger
	else if(indexTP == 26){
		if(getWeapon() == null or getWeapon() != WEAPON_LIGHTNINGER)
			setWeapon(WEAPON_LIGHTNINGER);
		useWeapon(enemy);
	}
	// Utiliser la chip cure
	else if(indexTP == 27){
		tryAndUseChip(CHIP_CURE,entity);
	}
	//utiliser la chip vaccine
	else if(indexTP == 28){
		tryAndUseChip(CHIP_VACCINE,entity);
	}
	//Utiliser la chip regeneration
	else if(indexTP == 29){
		tryAndUseChip(CHIP_REGENERATION,entity);
	}
	//Utiliser la chip remission
	else if(indexTP == 30){
		tryAndUseChip(CHIP_REMISSION,entity);
	}
	//Utiliser la chip elevation
	else if(indexTP == 31){
		tryAndUseChip(CHIP_ELEVATION,entity);
	}
	// Utiliser la chip therapy
	else if(indexTP == 32){
		tryAndUseChip(CHIP_THERAPY,entity);
	}
	//Utiliser la chip helmet
	else if(indexTP == 33){
		tryAndUseChip(CHIP_HELMET,entity);
	}
	//Utiliser la chip wall
	else if(indexTP == 34){
		tryAndUseChip(CHIP_WALL,entity);
	}
	//Utiliser la chip shield
	else if(indexTP == 35){
		tryAndUseChip(CHIP_SHIELD,entity);
	}
	//utiliser la chip armor
	else if(indexTP == 36){
		tryAndUseChip(CHIP_ARMOR,entity);
	}
	//Utiliser la chip forteress
	else if(indexTP == 37){
		tryAndUseChip(CHIP_FORTRESS,entity);
	}
	//Utiliser la chip proteine
	else if(indexTP == 38){
		tryAndUseChip(CHIP_PROTEIN,entity);
	}
	//Utiliser la chip solidification
	else if(indexTP == 39){
		tryAndUseChip(CHIP_SOLIDIFICATION,entity)
	}
	//Utiliser la chip steroid
	else if(indexTP == 40){
		tryAndUseChip(CHIP_STEROID,entity);
	}
	//Utiliser adrenaline
	else if(indexTP == 41){
		tryAndUseChip(CHIP_ADRENALINE,entity);
	}
	//Utiliser liberation
	else if(indexTP == 42){
		tryAndUseChip(CHIP_LIBERATION,entity);
	}
	//Utiliser la chip antidote
	else if(indexTP == 43){
		tryAndUseChip(CHIP_ANTIDOTE,entity);
	}
	//-----------------------------------------------------------------
	else {
		// Problème lol... 
	}
	





// Move Point 


var lossLifeVar = lossLife; 
var usefullTP = enemyLife - getLife(enemy); 
var usefullRound = 0;
if(usefullTP == 0){
	usefullRound = 0;
}else if(usefullTP < 10){
	usefullRound = 1;
}else if(usefullTP < 20){
	usefullRound = 2;
}else if(usefullTP < 30){
	usefullRound = 3;
}else if(usefullTP < 40){
	usefullRound = 4;
}else if(usefullTP < 50){
	usefullRound = 5;
}else if(usefullTP < 60){
	usefullRound = 6;
}else if(usefullTP < 70){
	usefullRound = 7;
}else if(usefullTP < 80){
	usefullRound = 8;
}else if(usefullTP < 90){
	usefullRound = 9;
}else{
	usefullRound = 10;	
}
lossLife - getLife(); 


debug(vectorisation() +"/"+indexAction + "/" + usefullRound + "/" + 0 + "/" + info); 

function vectorisation(){
	var enemy = getNearestEnemy();
	var entity = getEntity();
	var enemyCell = getCell(enemy);
	var entityCell = getCell(entity); 
	var vecteur = "";
	//Différence de vie entre les 2 joueurs
	(getLife(entity) > 2000) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1800) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1700) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1600) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1500) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1400) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1300) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1200) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1100) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 1000) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 900) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 800) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 700) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 600) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 500) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 400) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 300) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 200) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(entity) > 100) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";

	(getLife(enemy) > 2000) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1800) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1700) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1600) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1500) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1400) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1300) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1200) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1100) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 1000) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 900) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 800) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 700) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 600) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 500) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 400) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 300) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 200) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	(getLife(enemy) > 100) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";


	//Ligne de vue entre les deux joueurs
	(lineOfSight(getCell(),getCell(enemy))) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	//Utilisation de l'arme sur l'adversaire
	(canUseWeapon(enemy)) ? vecteur= vecteur+"1" : vecteur = vecteur+"0";
	//Disponibilité des chips
	var tabChips = getChips();
	for(var i=0; i<count(tabChips); i++){
			(getCooldown(tabChips[i]) == 0) ? vecteur= vecteur+"1" : vecteur= vecteur+"0";
	}
	return vecteur;
}
